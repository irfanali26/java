import java.util.ArrayList;
	import java.util.List;

	public class Students_Data {
    	public static void main(String[] args) {
        String studentData = "IRFAN_ALI_BURIRO:98, YASIR_NAWAZ:92, ROSHAN_ALI:88, AHMED_ALI:90";

        // Split the studentData into individual records
        String[] records = studentData.split(", ");


        // Lists to store student names and scores

        List<String> studentNames = new ArrayList<>();
        List<Integer> studentScores = new ArrayList<>();


        // Populate the lists with data from split records

        for (String record : records) {
            String[] parts = record.split(":");
            if (parts.length != 2) {
                System.out.println("Invalid data format: " + record);
                return;
            }

            studentNames.add(parts[0]);
            try {
                int score = Integer.parseInt(parts[1]);
                studentScores.add(score);
            } catch (NumberFormatException e) {
                System.out.println("Invalid score for student " + parts[0]);
                return;
            }
        }




        // Calculate and display statistics

        int numStudents = studentNames.size();
        int totalScore = 0;
        int highestScore = Integer.MIN_VALUE;
        int lowestScore = Integer.MAX_VALUE;
        String highestScorer = "";
        String lowestScorer = "";

        for (int i = 0; i < numStudents; i++) {
            int score = studentScores.get(i);
            totalScore += score;
            if (score > highestScore) {
                highestScore = score;
                highestScorer = studentNames.get(i);
            }
            if (score < lowestScore) {
                lowestScore = score;
                lowestScorer = studentNames.get(i);
            }
        }

        System.out.println("Total number of students: " + numStudents);
        System.out.println("Average score of all students: " + (totalScore / (double) numStudents));
        System.out.println("Highest score: " + highestScore + " achieved by " + highestScorer);
        System.out.println("Lowest score: " + lowestScore + " achieved by " + lowestScorer);
    }
}